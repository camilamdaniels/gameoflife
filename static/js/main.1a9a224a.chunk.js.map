{"version":3,"sources":["Game.js","App.js","serviceWorker.js","index.js"],"names":["Cell","this","props","x","y","className","style","left","top","width","CELL_SIZE","height","Component","Game","state","cells","interval","isRunning","runGame","setState","runIteration","stopGame","timeoutHandler","window","clearTimeout","handleIntervalChange","event","target","value","handleClick","elemOffset","getElementOffset","offsetX","clientX","offsetY","clientY","Math","floor","cols","rows","board","makeCells","handleClear","makeEmptyBoard","handleRandom","random","HEIGHT","WIDTH","console","log","newBoard","neighbors","calculateNeighbors","setTimeout","dirs","i","length","dir","y1","x1","push","rect","boardRef","getBoundingClientRect","doc","document","documentElement","pageXOffset","clientLeft","pageYOffset","clientTop","backgroundSize","onClick","ref","n","map","cell","key","onChange","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.1a9a224a.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './Game.css';\r\n\r\nconst CELL_SIZE = 20;\r\nconst WIDTH = 800;\r\nconst HEIGHT = 600;\r\n\r\nclass Cell extends Component {\r\n\trender() {\r\n\t\tconst { x, y } = this.props;\r\n\r\n\t\treturn (\r\n\t\t\t<div \r\n\t\t\t\tclassName=\"Cell\" \r\n\t\t\t\tstyle={{ \r\n\t\t\t\t\tleft: `${CELL_SIZE * x + 1}px`, \r\n\t\t\t\t\ttop: `${CELL_SIZE * y + 1}px`,\r\n\t\t\t\t\twidth: `${CELL_SIZE - 1}px`,\r\n\t\t\t\t\theight: `${CELL_SIZE - 1}px`}}>\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nclass Game extends Component {\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.rows = HEIGHT / CELL_SIZE;\r\n\t\tthis.cols = WIDTH / CELL_SIZE;\r\n\t\tthis.board = this.makeEmptyBoard();\r\n\t}\r\n\r\n\tstate = { \r\n\t\tcells: [],\r\n\t\tinterval: 100,\r\n\t\tisRunning: false\r\n\t}\r\n\r\n\trunGame = () => {\r\n\t\tthis.setState({ isRunning: true });\r\n\t\tthis.runIteration();\r\n\t}\r\n\r\n\tstopGame = () => {\r\n\t\tthis.setState({ isRunning: false });\r\n\r\n\t\tif (this.timeoutHandler) {\r\n\t\t\twindow.clearTimeout(this.timeoutHandler);\r\n\t\t\tthis.timeoutHandler = null;\r\n\t\t}\r\n\t}\r\n\r\n\trunIteration() {\r\n\t\tconsole.log('running iteration');\r\n\t\tlet newBoard = this.makeEmptyBoard();\r\n\r\n\t\tfor (let y = 0; y < this.rows; y++) {\r\n\t\t\tfor (let x = 0; x < this.cols; x++) {\r\n\t\t\t\tlet neighbors = this.calculateNeighbors(this.board, x, y);\r\n\r\n\t\t\t\tif (this.board[y][x]) {\r\n\t\t\t\t\tif (neighbors === 2 || neighbors === 3) {\r\n\t\t\t\t\t\tnewBoard[y][x] = true;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tnewBoard[y][x] = false;\r\n\t\t\t\t\t} \r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (!this.board[y][x] && neighbors === 3) {\r\n\t\t\t\t\t\tnewBoard[y][x] = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.board = newBoard;\r\n\t\tthis.setState({ cells: this.makeCells() });\r\n\r\n\t\tthis.timeoutHandler = window.setTimeout(() => { this.runIteration(); }, this.state.interval);\r\n\t}\r\n\r\n\tcalculateNeighbors(board, x, y) {\r\n        let neighbors = 0;\r\n        const dirs = [[-1, -1], [-1, 0], [-1, 1], [0, 1], [1, 1], [1, 0], [1, -1], [0, -1]];\r\n        for (let i = 0; i < dirs.length; i++) {\r\n            const dir = dirs[i];\r\n            let y1 = y + dir[0];\r\n            let x1 = x + dir[1];\r\n\r\n            if (x1 >= 0 && x1 < this.cols && y1 >= 0 && y1 < this.rows && board[y1][x1]) {\r\n                neighbors++;\r\n            }\r\n        }\r\n\r\n        return neighbors;\r\n    }\r\n\r\n\thandleIntervalChange = (event) => {\r\n\t\tthis.setState({ interval: event.target.value });\r\n\t}\r\n\r\n\tmakeEmptyBoard() {\r\n\t\tlet board = [];\r\n\r\n\t\tfor (let y = 0; y < this.rows; y++) {\r\n\t\t\tboard[y] = [];\r\n\r\n\t\t\tfor (let x = 0; x < this.cols; x++) {\r\n\t\t\t\tboard[y][x] = false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn board;\r\n\t}\r\n\r\n\tmakeCells() {\r\n\t\tlet cells = [];\r\n\r\n\t\tfor (let y = 0; y < this.rows; y++) {\r\n\t\t\tfor (let x = 0; x < this.cols; x++) {\r\n\t\t\t\tif (this.board[y][x]) cells.push({ x, y });\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn cells;\r\n\t}\r\n\r\n\tgetElementOffset() {\r\n\t\tconst rect = this.boardRef.getBoundingClientRect();\r\n\t\tconst doc = document.documentElement;\r\n\r\n\t\treturn {\r\n\t\t\tx: (rect.left + window.pageXOffset) - doc.clientLeft,\r\n\t\t\ty: (rect.top + window.pageYOffset) - doc.clientTop\r\n\t\t}\r\n\t}\r\n\r\n\thandleClick = (event) => {\r\n\t\tconst elemOffset = this.getElementOffset();\r\n\t\tconst offsetX = event.clientX - elemOffset.x;\r\n\t\tconst offsetY = event.clientY - elemOffset.y;\r\n\t\tconst x = Math.floor(offsetX / CELL_SIZE);\r\n\t\tconst y = Math.floor(offsetY / CELL_SIZE);\r\n\r\n\t\tif ( x >= 0 && x <= this.cols && y >= 0 && y <= this.rows) {\r\n\t\t\tthis.board[y][x] = !this.board[y][x];\r\n\t\t}\r\n\r\n\t\tthis.setState({ cells: this.makeCells()})\r\n\t}\r\n\r\n\thandleIntervalChange = (event) => {\r\n        this.setState({ interval: event.target.value });\r\n    }\r\n\r\n    handleClear = () => {\r\n        this.board = this.makeEmptyBoard();\r\n        this.setState({ cells: this.makeCells() });\r\n    }\r\n\r\n    handleRandom = () => {\r\n        for (let y = 0; y < this.rows; y++) {\r\n            for (let x = 0; x < this.cols; x++) {\r\n                this.board[y][x] = (Math.random() >= 0.5);\r\n            }\r\n        }\r\n\r\n        this.setState({ cells: this.makeCells() });\r\n    }\r\n\r\n\trender() {\r\n\t\tconst { cells, interval, isRunning } = this.state;\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<div \r\n\t\t\t\t\tclassName=\"Board\" \r\n\t\t\t\t\tstyle={{ width: WIDTH, height: HEIGHT, backgroundSize: `${CELL_SIZE}px ${CELL_SIZE}px` }}\r\n\t\t\t\t\tonClick={this.handleClick}\r\n\t\t\t\t\tref={(n) => { this.boardRef = n; }}>\r\n\t\t\t\t\t\t{cells.map(cell => (\r\n\t\t\t\t\t\t\t<Cell \r\n\t\t\t\t\t\t\t\tx={cell.x}\r\n\t\t\t\t\t\t\t\ty={cell.y}\r\n\t\t\t\t\t\t\t\tkey={`${cell.x},${cell.y}`}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t</div>\r\n\t\t\t\t<br></br>\r\n\t\t\t\t<div className=\"center\">\r\n\t\t\t\t\tUpdate every \r\n\t\t\t\t\t\t<div className=\"input-field inline\">\r\n\t\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\t\tvalue={this.state.interval} \r\n\t\t\t\t\t\t\t\tonChange={this.handleIntervalChange}/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\tmsec\r\n\t\t\t\t</div>\r\n\t\t\t\t<br></br>\r\n\t\t\t\t<div className=\"center\">\r\n\t\t\t\t\t{isRunning ? <button className=\"btn-flat\" onClick={this.stopGame}>Stop</button> : <button className=\"btn-flat\" onClick={this.runGame}>Run</button>}\r\n\t\t\t\t\t<button className=\"btn-flat\" onClick={this.handleRandom}>Random</button>\r\n\t\t\t\t\t<button className=\"btn-flat\" onClick={this.handleClear}>Clear</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Game;","import React from 'react';\nimport Game from './Game';\n\nfunction App() {\n  return (\n    <div>\n      <h1 className=\"center\">Cam's Game of Life</h1>\n      <Game />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport materializeCSS from 'materialize-css/dist/css/materialize.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}